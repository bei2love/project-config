spring:
  application:
    name: ace-auth
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null
  redis:
    database: 2
    host: ${REDIS_HOST:redis-host}
    port: ${REDIS_PORT:6379}
    pool:
    max-active: 20
  datasource:
    name: test
    url: jdbc:mysql://${MYSQL_HOST:192.168.23.211}:${MYSQL_PORT:3306}/kd_auth_v1?useUnicode=true&characterEncoding=UTF8
    username: root
    password: 123456
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
  rabbitmq:
    host: ${RABBIT_MQ_HOST:rabbitmq-host}
    port:  ${RABBIT_MQ_PORT:5672}
    username: guest
    password: guest
  sleuth:
    enabled: true
    http:
      legacy:
        enabled: true
  cloud:
    consul:
      enabled: true
      host: consul-host
      port: 8500
      discovery:
        healthCheckPath: /actuator/health
        healthCheckInterval: 5s
        instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
        register: true
        enabled: true

mybatis-plus:
  mapper-locations: classpath:/mapper/auth/*Mapper.xml
  global-config:
    #刷新mapper 调试神器
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: UUID
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
      db-type: mysql
      #表名前缀
      table-prefix: kd_
    refresh: true
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
    configuration:
      map-underscore-to-camel-case: true
      cache-enabled: false

server:
  port: 9777 #启动端口

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

#eureka:
#  instance:
#    statusPageUrlPath: /actuator/info
#    healthCheckUrlPath: /actuator/health
#    # docker 部署开启
#    prefer-ip-address: true
#    ip-address: 127.0.0.1
#  client:
#    serviceUrl:
#      #            defaultZone: http://localhost:8761/eureka/
#      # docker 部署开启
#      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/



jwt:
  token-header: Authorization
  expire: 14400
  rsa-secret: xx1WET12^%3^(WE45

client:
  id: kd-auth
  secret: 123456
  token-header: x-client-token
  expire: 14400
  rsa-secret: x2318^^(*WRYQWR(QW&T

logging:
  level:
    #        tk.mybatis: DEBUG
    com.github.wxiaoqi.security.auth: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: '*'
  security:
    enabled: false
